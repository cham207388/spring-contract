services:
  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    environment:
      DB_URL: "jdbc:postgresql://contract-db:5432/contract"
      DB_USERNAME: "postgres"
      DB_PASSWORD: "postgres"
      ZIPKIN_ENDPOINT: "http://zipkin:9411/api/v2/spans"
      PRODUCER_PORT: 8081
      PRODUCER_HOST: producer
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      POST_QUEUE: "post-queue"
    depends_on:
      contract-db:
        condition: service_healthy
      zipkin:
        condition: service_started
      producer:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      DB_URL: "jdbc:postgresql://contract-db:5432/contract"
      DB_USERNAME: "postgres"
      DB_PASSWORD: "postgres"
      ZIPKIN_ENDPOINT: "http://zipkin:9411/api/v2/spans"
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      POST_QUEUE: "post-queue"
    depends_on:
      contract-db:
        condition: service_healthy
      zipkin:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  contract-db:
    image: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "contract"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ messaging
      - "15672:15672" # RabbitMQ management console
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data: